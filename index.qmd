---
title: "RP1"
author: "Gezhi Chen Coraline"

execute:
  echo: false
  
bibliography: references.bib
---

> **Abstract.** This is a suggested formatting for your abstract. This **quarto** document is a template for your report. It includes some basic ways of working with such documents. You are invited to learn more about developing online reports with this technology. 
>
> **Keywords.** bsvars, quarto, R, Australia inflation rate

# Introduction


## The question objective, and motivation
**Objective: ** The purpose of this research is to explore the trend in Australia's inflation rate over the next two years.

**Question: ** Will Australia's inflation rate fall back to the 2-3% inflation target range in 2025, and will it reach 2.5% in 2026?

The Reserve Bank of Australia (RBA) forecasts that inflation will fall back to the target range of 2% to 3% by 2025 and reach the midpoint of this range in 2026. The purpose of the study is to forecast inflation over the next two years and assess the reasonableness of the RBA's forecast. This is because we have observed a sharp rise in inflation to 7.8% during COVID-19, and in response the RBA implemented tightening monetary policy and increased interest rates starting in late 2022. Entering mid-to-late 2023, the pace of interest rate increases has slowed down. This research will help determine whether the RBA correctly assumed that its monetary policy measures have effectively suppressed inflation and expected that inflation will fall back to the target range over the next year.


## Data and their properties

**Data Selection**
1.$cpi_i$: Consumer Price Index from ABS
2.$gdp_i$: Gross domestic product (Chain volume measures - Percentage changes) from the ABS
3.$crt_i$: Cash rate target from RBA
4.$unemp_i$: Unemployment rate with seasonal adjusted from ABS
5.$export_i$: International export in Goods and Services with seasonal adjusted from the ABS
6.$import_i$: International import in Goods and Services with seasonal adjusted from the ABS
7.$nloan_i$: New loan commitments with seasonal adjusted from ABS
8.$gold_i$: Gold price from yahoo finance
9.$aord_i$: All Ordinary index from yahoo finance
10.$exr_i$: AUD/USD (exchange rate) from yahoo finance

```{r Data downloading, fig.pos="H"}
#| echo: false
#| message: false
#| warning: false

### Data downloading

# 1.Inflation / CPI 
# 6401.0 Consumer Price Index, Australia
# series_id = "A2325846C": Index Numbers ;  All groups CPI ;  Australia ;
cpi_download  = read_abs(series_id = "A2325846C")     
cpi_data      = xts(cpi_download$value, cpi_download$date)

# 2.GDP
# 5206.0 Australian National Accounts: National Income, Expenditure and Product
# series_id = "A2304370T": Gross domestic product: Chain volume measures - Percentage changes
gdp_download  = read_abs(series_id = "A2304370T")     
gdp_data      = xts(cpi_download$value, cpi_download$date)

# 3.Cash rate target

crt_download   = read_rba(series_id = "FIRMMCRTD")   
crt_data       = xts(crt_download$value, crt_download$date)
crt_data       = apply.quarterly(crt_data, mean)     # change daily to quarterly
crt_data       = xts(crt_data, seq(as.Date("1990-03-01"), by = "quarter", length.out = length(crt_data)))

# 4.Unemployment rate
# 6202.0 Labour Force, Australia
# series_id = "A84423050A": Unemployment rate ;  Persons ; seasonal adjust
unemp_download = read_abs(series_id = "A84423050A")     
unemp_data     = xts(unemp_download$value, unemp_download$date)
unemp_data     = apply.quarterly(unemp_data, mean) # change daily to quarterly
unemp_data     = xts(unemp_data, seq(as.Date("1978-03-01"), by = "quarter", length.out = length(unemp_data)))

# 5.Export
# 5368.0 International Trade in Goods
# series_id = "A2718603V": Debits, Total goods ;
export_download = read_abs(series_id = "A2718603V")     
export_data     = xts(export_download$value, export_download$date)
export_data     = abs(export_data)
export_data     = apply.quarterly(export_data, mean)
 
# 6.Import
# 5368.0 International Trade in Goods
# series_id = "A2718603V": Credits, Total goods ;
import_download  = read_abs(series_id = "A2718603V")     
import_data      = xts(import_download$value, import_download$date)
import_data      = apply.quarterly(import_data, mean)

# 7.New loan
# 5601.0 Lending Indicators
# series_id = "A108296973X"ï¼š Households ;  Housing Finance ;  Total housing excluding refinancing ;  New loan commitments ;  Value ; seasonal adjust
nloan_download   = read_abs(series_id = "A108296973X")     
nloan_data       = xts(nloan_download$value, nloan_download$date)
nloan_data       = apply.quarterly(nloan_data, mean)


# 8.Gold price
gold_link       = "https://query1.finance.yahoo.com/v7/finance/download/GC%3DF?period1=1262304000&period2=1703980800&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true"
gold_download   = read.csv(gold_link)
gold_data       = gold_download[,6]
gold_data       = data.frame(gold_download[,1], gold_data)
colnames(gold_data) = c('date', 'gol')
gold_data$date  = as.Date(as.character(gold_data$date),format="%Y-%m-%d") 
gold_data       = xts(gold_data$gol, gold_data$date)
gold_data       = apply.quarterly(gold_data, mean)

# 9.AORD
aord_link       = "https://query1.finance.yahoo.com/v7/finance/download/%5EAORD?period1=1262304000&period2=1703980800&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true"
aord_download   = read.csv(aord_link)
aord_data       = aord_download[,6]
aord_data       = data.frame(aord_download[,1], aord_data)
colnames(aord_data) = c('date', 'aord')
aord_data$date  = as.Date(as.character(aord_data$date),format="%Y-%m-%d") 
aord_data       = xts(aord_data$aord, aord_data$date)
aord_data       = apply.quarterly(aord_data, mean)

# 10. AUD/USD
exr_link        = "https://query1.finance.yahoo.com/v7/finance/download/AUDUSD%3DX?period1=1262304000&period2=1703980800&interval=1mo&filter=history&frequency=1mo&includeAdjustedClose=true"
exr_download    = read.csv(exr_link)
exr_data        = exr_download[,6]
exr_data        = data.frame(exr_download[,1], exr_data)
colnames(exr_data) = c('date', 'exr')
exr_data$date   = as.Date(as.character(exr_data$date),format="%Y-%m-%d") 
exr_data        = xts(exr_data$exr, exr_data$date)
exr_data        = apply.quarterly(exr_data, mean)


```

```{r Data combine fig.pos="H"}
#| echo: false
#| message: false
#| warning: false

### Data plot
# All Variables
all_data             = na.omit(merge(cpi_data, gdp_data, crt_data, unemp_data, export_data, import_data, nloan_data,  gold_data, aord_data, exr_data ))
colnames(all_data)   = c("cpi_data", "gdp_dat", "crt_data", "unemp_data", "export_data", "import_data","nloan_data", "gold_data", "aord_data", "exr_data")
```


```{r Data plot, fig.align='center',fig.pos='H'}
#| echo: false
#| message: false
#| warning: false

## Line plot
par(mfcol = c(5, 2), mar = c(2, 2, 2, 2))

for (i in 1:10) {
  ts.plot(all_data[, i], main = colnames(all_data)[i], 
          ylab = "", xlab = "", col = "darkblue")
}
```


```{r ACF plot, fig.align='center',fig.pos='H'}
#| echo: false
#| message: false
#| warning: false

## ACF plot
par(mfcol = c(5, 2), mar=c(2,2,2,2))
for (i in 1:10){
  acf = acf(all_data[,i], plot = FALSE)[1:20]
  plot(acf, main = "")
  title(main = paste(colnames(all_data)[i]), line = 0.5)
}
```

## The model and hypothesis







## References {.unnumbered}